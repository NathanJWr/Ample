!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/c52a29d0/
$(EXE)	makefile	/^$(EXE) : $(OBJECTS)$/;"	t
$(OBJDIR)%.o	makefile	/^$(OBJDIR)%.o : %.c$/;"	t
BUILD	makefile	/^    BUILD = debug$/;"	m
CC	makefile	/^CC = gcc$/;"	m
CFLAGS	makefile	/^CFLAGS = -Wall$/;"	m
DEFAULT_RESIZE	ssl.h	/^#define DEFAULT_RESIZE(/;"	d
DIRS	makefile	/^DIRS=bin bin\/debug bin\/release obj obj\/debug obj\/release$/;"	m
EXE	makefile	/^EXE         = $(EXEDIR)tl$/;"	m
EXEDIR	makefile	/^EXEDIR      = bin\/$(BUILD)\/$/;"	m
EXPECT	test_helper.h	/^#define EXPECT(/;"	d
EXPECT_EQ	test_helper.h	/^#define EXPECT_EQ(/;"	d
LD	makefile	/^LD = ld$/;"	m
LDFLAGS	makefile	/^LDFLAGS = -lbsd$/;"	m
LEXER_H_	lexer.h	/^#define LEXER_H_$/;"	d
OBJDIR	makefile	/^OBJDIR      = obj\/$(BUILD)\/$/;"	m
OBJECTS	makefile	/^OBJECTS     = $(addprefix $(OBJDIR), $(SOURCES:.c=.o))$/;"	m
SOURCES	makefile	/^SOURCES     = $(wildcard *.c)$/;"	m
SSL_BASE_POINTER	ssl.h	/^#define SSL_BASE_POINTER(/;"	d
SSL_H_	ssl.h	/^#define SSL_H_$/;"	d
STB_STRETCHY_BUFFER_H_INCLUDED	stretchy_buffer.h	/^#define STB_STRETCHY_BUFFER_H_INCLUDED$/;"	d
TEST_HELPER_H_	test_helper.h	/^#define TEST_HELPER_H_$/;"	d
TOK_IDENTIFIER	lexer.h	/^    TOK_IDENTIFIER = 127,$/;"	e	enum:__anon719f105b0103
TOK_INTEGER	lexer.h	/^    TOK_INTEGER = 128,$/;"	e	enum:__anon719f105b0103
TRY	test_helper.h	/^#define TRY(/;"	d
TValue	lexer.h	/^} TValue;$/;"	t	typeref:enum:__anon719f105b0103
Token	lexer.h	/^struct Token {$/;"	s
_SSLString	ssl.h	/^struct _SSLString {$/;"	s
__anon719f105b0103	lexer.h	/^typedef enum {$/;"	g
all	makefile	/^all : $(EXE)$/;"	t
clean	makefile	/^clean:$/;"	t
debug	makefile	/^release debug :$/;"	t
length	ssl.h	/^    uint32_t length;$/;"	m	struct:_SSLString	typeref:typename:uint32_t
lex_all	lexer.c	/^struct Token* lex_all (char* fb)$/;"	f	typeref:struct:Token *
lexer.c	lexer.c	1;"	F
lexer.h	lexer.h	1;"	F
lexer_tests.c	tests/lexer_tests.c	1;"	F
main	main.c	/^int main (int argc, char** argv) {$/;"	f	typeref:typename:int
main	tests/lexer_tests.c	/^int main ()$/;"	f	typeref:typename:int
main.c	main.c	1;"	F
makefile	makefile	1;"	F
read_whole_file	main.c	/^char* read_whole_file (FILE* f)$/;"	f	typeref:typename:char *
release	makefile	/^release debug :$/;"	t
sb_add	stretchy_buffer.h	/^#define sb_add /;"	d
sb_count	stretchy_buffer.h	/^#define sb_count /;"	d
sb_free	stretchy_buffer.h	/^#define sb_free /;"	d
sb_last	stretchy_buffer.h	/^#define sb_last /;"	d
sb_push	stretchy_buffer.h	/^#define sb_push /;"	d
size	ssl.h	/^    uint32_t size;$/;"	m	struct:_SSLString	typeref:typename:uint32_t
ssl.c	ssl.c	1;"	F
ssl.h	ssl.h	1;"	F
ssl_addchar	ssl.c	/^char* ssl_addchar (char* str, char c)$/;"	f	typeref:typename:char *
ssl_free	ssl.c	/^void ssl_free (char* str) $/;"	f	typeref:typename:void
ssl_resize	ssl.c	/^char* ssl_resize (char* str, uint32_t size)$/;"	f	typeref:typename:char *
ssl_strcat	ssl.c	/^char* ssl_strcat (char* restrict dest, char* restrict src)$/;"	f	typeref:typename:char *
ssl_strcpy	ssl.c	/^char* ssl_strcpy (char* restrict dest, char* restrict str)$/;"	f	typeref:typename:char *
stb__sbgrow	stretchy_buffer.h	/^#define stb__sbgrow(/;"	d
stb__sbgrowf	stretchy_buffer.h	/^static void * stb__sbgrowf(void *arr, int increment, int itemsize)$/;"	f	typeref:typename:void *
stb__sbm	stretchy_buffer.h	/^#define stb__sbm(/;"	d
stb__sbmaybegrow	stretchy_buffer.h	/^#define stb__sbmaybegrow(/;"	d
stb__sbn	stretchy_buffer.h	/^#define stb__sbn(/;"	d
stb__sbneedgrow	stretchy_buffer.h	/^#define stb__sbneedgrow(/;"	d
stb__sbraw	stretchy_buffer.h	/^#define stb__sbraw(/;"	d
stb_sb_add	stretchy_buffer.h	/^#define stb_sb_add(/;"	d
stb_sb_count	stretchy_buffer.h	/^#define stb_sb_count(/;"	d
stb_sb_free	stretchy_buffer.h	/^#define stb_sb_free(/;"	d
stb_sb_last	stretchy_buffer.h	/^#define stb_sb_last(/;"	d
stb_sb_push	stretchy_buffer.h	/^#define stb_sb_push(/;"	d
stretchy_buffer.h	stretchy_buffer.h	1;"	F
string	lexer.h	/^    char* string; \/* ssl managed string *\/$/;"	m	struct:Token	typeref:typename:char *
string	ssl.h	/^    char string[];$/;"	m	struct:_SSLString	typeref:typename:char[]
test_helper.h	test_helper.h	1;"	F
test_lexer_identifier	tests/lexer_tests.c	/^bool test_lexer_identifier ()$/;"	f	typeref:typename:bool
test_lexer_integer	tests/lexer_tests.c	/^bool test_lexer_integer ()$/;"	f	typeref:typename:bool
test_lexer_integer_and_identifier	tests/lexer_tests.c	/^bool test_lexer_integer_and_identifier ()$/;"	f	typeref:typename:bool
token_free_all	lexer.c	/^void token_free_all (struct Token* tokens)$/;"	f	typeref:typename:void
value	lexer.h	/^    TValue value;$/;"	m	struct:Token	typeref:typename:TValue
